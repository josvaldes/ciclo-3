// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parqueadero.App.Persistencia;

namespace Parqueadero.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20210924165408_Entidades")]
    partial class Entidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Parqueadero.App.Dominio.DatosPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .HasColumnType("text");

                    b.Property<string>("Clave")
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Identificacion")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Identificacion")
                        .IsUnique();

                    b.ToTable("DatosPersonas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("DatosPersona");
                });

            modelBuilder.Entity("Parqueadero.App.Dominio.EspacioParqueadero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Tipo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EspaciosParqueaderos");
                });

            modelBuilder.Entity("Parqueadero.App.Dominio.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EspacioParqueaderoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FinReserva")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InicioReserva")
                        .HasColumnType("datetime");

                    b.Property<int?>("PropietarioId")
                        .HasColumnType("int");

                    b.Property<int?>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EspacioParqueaderoId");

                    b.HasIndex("PropietarioId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Parqueadero.App.Dominio.RolEmpleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RolEmpelados");
                });

            modelBuilder.Entity("Parqueadero.App.Dominio.TipoVehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TiposVehiculos");
                });

            modelBuilder.Entity("Parqueadero.App.Dominio.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Marca")
                        .HasColumnType("text");

                    b.Property<string>("Modelo")
                        .HasColumnType("text");

                    b.Property<string>("Observaciones")
                        .HasColumnType("text");

                    b.Property<string>("Placa")
                        .HasColumnType("text");

                    b.Property<int?>("PropietarioId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoVehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropietarioId");

                    b.HasIndex("TipoVehiculoId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("Parqueadero.App.Dominio.Empleado", b =>
                {
                    b.HasBaseType("Parqueadero.App.Dominio.DatosPersona");

                    b.Property<int?>("RolEmpleadoId")
                        .HasColumnType("int");

                    b.HasIndex("RolEmpleadoId");

                    b.HasDiscriminator().HasValue("Empleado");
                });

            modelBuilder.Entity("Parqueadero.App.Dominio.Propietario", b =>
                {
                    b.HasBaseType("Parqueadero.App.Dominio.DatosPersona");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime");

                    b.HasDiscriminator().HasValue("Propietario");
                });

            modelBuilder.Entity("Parqueadero.App.Dominio.Reserva", b =>
                {
                    b.HasOne("Parqueadero.App.Dominio.EspacioParqueadero", "EspacioParqueadero")
                        .WithMany()
                        .HasForeignKey("EspacioParqueaderoId");

                    b.HasOne("Parqueadero.App.Dominio.Propietario", "Propietario")
                        .WithMany()
                        .HasForeignKey("PropietarioId");

                    b.HasOne("Parqueadero.App.Dominio.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId");

                    b.Navigation("EspacioParqueadero");

                    b.Navigation("Propietario");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Parqueadero.App.Dominio.Vehiculo", b =>
                {
                    b.HasOne("Parqueadero.App.Dominio.Propietario", "Propietario")
                        .WithMany()
                        .HasForeignKey("PropietarioId");

                    b.HasOne("Parqueadero.App.Dominio.TipoVehiculo", "TipoVehiculo")
                        .WithMany()
                        .HasForeignKey("TipoVehiculoId");

                    b.Navigation("Propietario");

                    b.Navigation("TipoVehiculo");
                });

            modelBuilder.Entity("Parqueadero.App.Dominio.Empleado", b =>
                {
                    b.HasOne("Parqueadero.App.Dominio.RolEmpleado", "RolEmpleado")
                        .WithMany()
                        .HasForeignKey("RolEmpleadoId");

                    b.Navigation("RolEmpleado");
                });
#pragma warning restore 612, 618
        }
    }
}
